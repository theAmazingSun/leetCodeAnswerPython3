#Given an array of integers, return indices of the two numbers such that they add up to a specific target.
#You may assume that each input would have  exactly  one solution, and you may not use the  same  element twice.

#Example:
#Given nums = [2, 7, 11, 15], target = 9,
#Because nums[0] + nums[1] = 2 + 7 = 9,
#return [0, 1].


#python solution

class Solution:
    def twoSum(self, nums, target):
        
        #type nums: List[int]
        #type target: int
        #return type: List[int]
        
        temp = {}
        for i,check in enumerate(nums):
            valid = target - check
            if valid not in temp:
                temp[check] = i
            else:
                return [temp[valid], i]
              
#java solution

class Solution {
    public int[] twoSum(int[] nums, int target) {
        Map<Integer, Integer> map = new HashMap<>();
        for (int i = 0; i < nums.length; i++){
            int valid = target - nums[i];
            if (map.containsKey(valid)){
                return new int[] { map.get(valid), i };                
            }
            map.put(nums[i], i);
        }
        throw new IllegalArgumentException("No two sum solution");
    }
}
