#Given a 32-bit signed integer, reverse digits of an integer.

#Example 1:
#Input: 123
#Output: 321

#Example 2:
#Input: -123
#Output: -321
#Example 3:

#Input: 120
#Output: 21
#Note:
#Assume we are dealing with an environment which could only 
#store integers within the 32-bit signed integer range: [−231,  231 − 1]. 
#For the purpose of this problem, assume that your function returns 0 when 
#the reversed integer overflows.


class Solution:
    def reverse(self, x):
        
        #type x: int
        #return type: int
        
        if x <= -2**31 or x >= 2**31 - 1:
            return 0
        else:
            xStr = str(x)
        if x >= 0:
            xRev = xStr[::-1]
        else:
            temp1 = xStr[1:]
            temp2 = temp1[::-1]
            xRev = '-' + temp2
        if int(xRev) <= -2**31 or int(xRev) >= 2**31 - 1: 
            return 0
        else:
            return int(xRev)
            
            
