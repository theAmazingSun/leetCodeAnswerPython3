class Solution:
    def generate(self, numRows: int) -> List[List[int]]:
        """
        :type numRows: int
        :rtype: List[List[int]]
        """
        result = []
        for row in range(numRows):
            result.append([])
            for i in range(row + 1):
                if i in (0, row):
                    result[row].append(1)
                else:
                    result[row].append(result[row - 1][i - 1] + result[row - 1][i])
        return result


Given a non-negative integer numRows, generate the first numRows of Pascal's triangle.
In Pascal's triangle, each number is the sum of the two numbers directly above it.

Example:
Input: 5
Output:
[
     [1],
    [1,1],
   [1,2,1],
  [1,3,3,1],
 [1,4,6,4,1]
]
