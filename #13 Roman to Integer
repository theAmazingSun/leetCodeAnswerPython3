class Solution:
    def romanToInt(self, s: str) -> int:
        """"
        :type s: str
        :rtype: int
        """
        dict = {"I": 1, "V": 5, "X": 10, "L": 50, "C": 100, "D": 500, "M": 1000}
        output = 0
        
        for i in range(len(s)):
            if i > 0 and dict[s[i]] > dict[s[i-1]]:
                output += dict[s[i]] - 2 * dict[s[i-1]]
            else:
                output += dict[s[i]]
        return output
            


class Solution:
    def romanToInt(self, s):
        
        ##type s: str
        ##return type: int
        
        dict = {'I': 1, 'V': 5, 'X': 10, 'L':50, 'C': 100, 'D': 500, 'M': 1000}
        length = len(s)
        sum = 0
        i = 0
        
        while i < length:
            if i+1 < length and dict[s[i]] < dict[s[i+1]]:
                sum += dict[s[i+1]] - dict[s[i]]
                i += 2
            else: 
                sum += dict[s[i]]
                i += 1
        
        return sum



