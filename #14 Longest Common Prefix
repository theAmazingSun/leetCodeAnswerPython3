class Solution:
    def longestCommonPrefix(self, strs: List[str]) -> str:
        """
        :type strs: List[str]
        :rtype: str
        """
        if not strs:
            return ""
        strs.sort()
        first = strs[0]
        last = strs[-1]
        i = 0
        while i < len(first) and i < len(last) and first[i] == last[i]:
            i += 1
        return first[:i]



#Write a function to find the longest common prefix string amongst an array of strings.
#If there is no common prefix, return an empty string "".

#Example 1:
#Input: ["flower","flow","flight"]
#Output: "fl"

#Example 2:
#Input: ["dog","racecar","car"]
#Output: ""
#Explanation: There is no common prefix among the input strings.

#Note:
#All given inputs are in lowercase letters a-z.

class Solution:
    def longestCommonPrefix(self, strs):
        
        #type strs: list[str]
        #return type: str
        
        if not strs:
            return ''
        if len(strs) == 1: 
            return strs[0]
        
        strs.sort()
        result = ''
        
        for x,y in zip(strs[0], strs[-1]):
            if x == y:
                result += x
            else:
                break
        return result



